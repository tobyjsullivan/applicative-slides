#### CHAPTER 0 : Setup our project ####

## Create Demo Sandbox
rm -rf ~/projects/applicative-sandbox && mkdir -p ~/projects/applicative-sandbox && cd ~/projects/applicative-sandbox

## Create the new project
activator new favourites-service play-scala

## Enter play project
cd favourites-service && activator run

## Check out the running server
http://localhost:9000


#### CHAPTER 1 : Designing the API ####

## Get to chapter code
cd ~/projects/applicative-demo/chapter1 && activator run

## Create new controller: FavouriteStudios
package controllers

import play.api.mvc.{Controller, Action}

object FavouriteStudios extends Controller {
	def add(userId: Int, studioId: Int) = Action {
		// TODO: Add favourite

		Ok(???)
	}
}

## Configure routes
POST		/users/:userId/favouriteStudios/:studioId		controllers.FavouriteStudios.add(userId: Int, studioId: Int)

## Create new model: FavouriteStudio
package models

case class FavouriteStudio(userId: Int, studioId: Int)

#### CHAPTER 1.1 : JSON ####

## Implement writes combinator (add to models.FavouriteStudio)
import play.api.libs.json._
import play.api.libs.functional.syntax._

object FavouriteStudio {
	implicit val favouriteStudioWrites: Writes[FavouriteStudio] = (
		(JsPath \ "userId").write[Int] and
		(JsPath \ "studioId").write[Int]
	)(unlift(FavouriteStudio.unapply))
}

## Use writes combinator (in controllers.FavouriteStudios)
Ok(Json.obj("result" -> FavouriteStudio(userId, studioId)))

## Test with CuRL
curl -X POST 'http://localhost:9000/users/12345/favouriteStudios/98765'

#### CHAPTER 2 : Anorm ####

## MySQL Configuration (in application.conf)
db.default.driver=com.mysql.jdbc.Driver
db.default.url="jdbc:mysql://127.0.0.1:3306/favourites-svc"
db.default.user="favourites-svc"
db.default.password="abcd1234"

## Create table in MySQL
CREATE TABLE `favouriteStudio` (
    `userId` INT(7) NOT NULL,
    `studioId` INT(7) NOT NULL,
    PRIMARY KEY `idx_user_studio` (`userId`, `studioId`),
    INDEX `idx_user` (`userId`)
);

## Define new class: models.dao.FavouriteStudioDAO
package models.dao

import models.FavouriteStudio
import anorm._
import play.api.db.DB
import play.api.Play.current

object FavouriteStudioDAO {
  def create(favourite: FavouriteStudio) = {
    DB.withConnection { implicit c =>
      SQL(
        """
          | INSERT IGNORE INTO `favouriteStudio` (`userId`, `studioId`)
          | VALUES
          |   ({userId}, {studioId});
        """.stripMargin).on(
          "userId" -> favourite.userId,
          "studioId" -> favourite.studioId
        ).executeInsert()
    }
  }
}

## Use DAO in model class (models.FavouriteStudio)
import models.dao.FavouriteStudioDAO

def addFavourite(userId: Int, studioId: Int): FavouriteStudio = {
  val favourite = FavouriteStudio(userId, studioId)

  FavouriteStudioDAO.create(favourite)

  favourite
}

## Use Model in controller (controllers.FavouriteStudios)
import models.FavouriteStudio

val favourite = FavouriteStudio.addFavourite(userId, studioId)

## Test with CuRL
curl -X POST 'http://localhost:9000/users/12345/favouriteStudios/98765'

#### CHAPTER 2.1 : Add a read endpoint ####

## Should we bother?

#### CHAPTER 3 : Caching ####